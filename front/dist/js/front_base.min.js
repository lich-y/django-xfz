function FrontBase(){}function Auth(){var t=this;t.maskWrapper=$(".mask-wrapper"),t.scrollWrapper=$(".scroll-wrapper"),t.smsCaptcha=$(".sms-captcha-btn")}FrontBase.prototype.run=function(){this.listenAuthBoxHover()},FrontBase.prototype.listenAuthBoxHover=function(){var t=$(".auth-box"),n=$(".user-more-box");t.hover(function(){n.show()},function(){n.hide()})},Auth.prototype.run=function(){var t=this;t.listenShowHideEvent(),t.listenSwitchEvent(),t.listenSigninEvent(),t.listenImgCaptchaEvent(),t.listenSmsCaptchaEvent(),t.listenSignupEvent()},Auth.prototype.showEvent=function(){this.maskWrapper.show()},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.smsSuccessEvent=function(){var t=this;messageBox.showSuccess("短信验证码发送成功！"),t.smsCaptcha.addClass("disabled");var n=10;t.smsCaptcha.unbind("click");var e=setInterval(function(){t.smsCaptcha.text(n+"s"),--n<=0&&(clearInterval(e),t.smsCaptcha.removeClass("disabled"),t.smsCaptcha.text("发送验证码"),t.listenSmsCaptchaEvent())},1e3)},Auth.prototype.listenShowHideEvent=function(){var t=this,n=$(".signin-btn"),e=$(".signup-btn"),a=$(".close-btn");n.click(function(){t.showEvent(),t.scrollWrapper.css({left:0})}),e.click(function(){t.showEvent(),t.scrollWrapper.css({left:-400})}),a.click(function(){t.hideEvent()})},Auth.prototype.listenSwitchEvent=function(){var n=this;$(".switch").click(function(){var t=n.scrollWrapper.css("left");(t=parseInt(t))<0?n.scrollWrapper.animate({left:"0"}):n.scrollWrapper.animate({left:"-400px"})})},Auth.prototype.listenImgCaptchaEvent=function(){var t=$(".img-captcha");t.click(function(){t.attr("src","/account/img_captcha/?random="+Math.random())})},Auth.prototype.listenSmsCaptchaEvent=function(){var n=this,t=$(".sms-captcha-btn"),e=$(".signup-group input[name='telephone']");t.click(function(){var t=e.val();t||messageBox.showInfo("请输入手机号码！"),xfzajax.get({url:"/account/sms_captcha/",data:{telephone:t},success:function(t){200==t.code&&n.smsSuccessEvent()},fail:function(t){console.log(t)}})})},Auth.prototype.listenSigninEvent=function(){var a=this,t=$(".signin-group"),s=t.find("input[name='telephone']"),i=t.find("input[name='password']"),o=t.find("input[name='remember']");t.find(".submit-btn").click(function(){var t=s.val(),n=i.val(),e=o.prop("checked");xfzajax.post({url:"/account/login/",data:{telephone:t,password:n,remember:e?1:0},success:function(t){200==t.code&&(a.hideEvent(),window.location.reload())},fail:function(t){}})})},Auth.prototype.listenSignupEvent=function(){var f=$(".signup-group");f.find(".submit-btn").click(function(t){t.preventDefault();var n=f.find("input[name='telephone']"),e=f.find("input[name='username']"),a=f.find("input[name='img_captcha']"),s=f.find("input[name='password1']"),i=f.find("input[name='password2']"),o=f.find("input[name='sms_captcha']"),c=n.val(),p=e.val(),r=a.val(),u=s.val(),l=i.val(),h=o.val();xfzajax.post({url:"/account/register/",data:{telephone:c,username:p,img_captcha:r,password1:u,password2:l,sms_captcha:h},success:function(t){200==t.code&&window.location.reload()}})})},$(function(){(new Auth).run()}),$(function(){(new FrontBase).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
